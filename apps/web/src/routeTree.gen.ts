/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as JoinOrganizationRouteImport } from './routes/join-organization'
import { Route as DownloadAppRouteImport } from './routes/download-app'
import { Route as CreateOrganizationRouteImport } from './routes/create-organization'
import { Route as _homeRouteImport } from './routes/__home'
import { Route as _authRouteImport } from './routes/__auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as _homeProgramsRouteImport } from './routes/__home.programs'
import { Route as _homePlanningRouteImport } from './routes/__home.planning'
import { Route as _homeDashboardRouteImport } from './routes/__home.dashboard'
import { Route as _homeAthletesRouteImport } from './routes/__home.athletes'
import { Route as _homeAboutRouteImport } from './routes/__home.about'
import { Route as _homeWorkoutsCreateRouteImport } from './routes/__home.workouts.create'
import { Route as _homeWorkoutsWorkoutIdRouteImport } from './routes/__home.workouts.$workoutId'
import { Route as _homeProgramsWorkoutsRouteImport } from './routes/__home.programs.workouts'
import { Route as _homeProgramsExercisesRouteImport } from './routes/__home.programs.exercises'
import { Route as _homeProgramsComplexRouteImport } from './routes/__home.programs.complex'
import { Route as _homeAthletesAthleteIdRouteImport } from './routes/__home.athletes.$athleteId'
import { Route as _authAcceptInvitationInvitationIdRouteImport } from './routes/__auth.accept-invitation.$invitationId'

const _authTermsLazyRouteImport = createFileRoute('/__auth/terms')()
const _authSignupLazyRouteImport = createFileRoute('/__auth/signup')()
const _authPrivacyLazyRouteImport = createFileRoute('/__auth/privacy')()
const _authLoginLazyRouteImport = createFileRoute('/__auth/login')()

const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const JoinOrganizationRoute = JoinOrganizationRouteImport.update({
  id: '/join-organization',
  path: '/join-organization',
  getParentRoute: () => rootRouteImport,
} as any)
const DownloadAppRoute = DownloadAppRouteImport.update({
  id: '/download-app',
  path: '/download-app',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateOrganizationRoute = CreateOrganizationRouteImport.update({
  id: '/create-organization',
  path: '/create-organization',
  getParentRoute: () => rootRouteImport,
} as any)
const _homeRoute = _homeRouteImport.update({
  id: '/__home',
  getParentRoute: () => rootRouteImport,
} as any)
const _authRoute = _authRouteImport.update({
  id: '/__auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const _authTermsLazyRoute = _authTermsLazyRouteImport
  .update({
    id: '/terms',
    path: '/terms',
    getParentRoute: () => _authRoute,
  } as any)
  .lazy(() => import('./routes/__auth.terms.lazy').then((d) => d.Route))
const _authSignupLazyRoute = _authSignupLazyRouteImport
  .update({
    id: '/signup',
    path: '/signup',
    getParentRoute: () => _authRoute,
  } as any)
  .lazy(() => import('./routes/__auth.signup.lazy').then((d) => d.Route))
const _authPrivacyLazyRoute = _authPrivacyLazyRouteImport
  .update({
    id: '/privacy',
    path: '/privacy',
    getParentRoute: () => _authRoute,
  } as any)
  .lazy(() => import('./routes/__auth.privacy.lazy').then((d) => d.Route))
const _authLoginLazyRoute = _authLoginLazyRouteImport
  .update({
    id: '/login',
    path: '/login',
    getParentRoute: () => _authRoute,
  } as any)
  .lazy(() => import('./routes/__auth.login.lazy').then((d) => d.Route))
const _homeProgramsRoute = _homeProgramsRouteImport.update({
  id: '/programs',
  path: '/programs',
  getParentRoute: () => _homeRoute,
} as any)
const _homePlanningRoute = _homePlanningRouteImport.update({
  id: '/planning',
  path: '/planning',
  getParentRoute: () => _homeRoute,
} as any)
const _homeDashboardRoute = _homeDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => _homeRoute,
} as any)
const _homeAthletesRoute = _homeAthletesRouteImport.update({
  id: '/athletes',
  path: '/athletes',
  getParentRoute: () => _homeRoute,
} as any)
const _homeAboutRoute = _homeAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => _homeRoute,
} as any)
const _homeWorkoutsCreateRoute = _homeWorkoutsCreateRouteImport.update({
  id: '/workouts/create',
  path: '/workouts/create',
  getParentRoute: () => _homeRoute,
} as any)
const _homeWorkoutsWorkoutIdRoute = _homeWorkoutsWorkoutIdRouteImport.update({
  id: '/workouts/$workoutId',
  path: '/workouts/$workoutId',
  getParentRoute: () => _homeRoute,
} as any)
const _homeProgramsWorkoutsRoute = _homeProgramsWorkoutsRouteImport.update({
  id: '/workouts',
  path: '/workouts',
  getParentRoute: () => _homeProgramsRoute,
} as any)
const _homeProgramsExercisesRoute = _homeProgramsExercisesRouteImport.update({
  id: '/exercises',
  path: '/exercises',
  getParentRoute: () => _homeProgramsRoute,
} as any)
const _homeProgramsComplexRoute = _homeProgramsComplexRouteImport.update({
  id: '/complex',
  path: '/complex',
  getParentRoute: () => _homeProgramsRoute,
} as any)
const _homeAthletesAthleteIdRoute = _homeAthletesAthleteIdRouteImport.update({
  id: '/$athleteId',
  path: '/$athleteId',
  getParentRoute: () => _homeAthletesRoute,
} as any)
const _authAcceptInvitationInvitationIdRoute =
  _authAcceptInvitationInvitationIdRouteImport.update({
    id: '/accept-invitation/$invitationId',
    path: '/accept-invitation/$invitationId',
    getParentRoute: () => _authRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-organization': typeof CreateOrganizationRoute
  '/download-app': typeof DownloadAppRoute
  '/join-organization': typeof JoinOrganizationRoute
  '/onboarding': typeof OnboardingRoute
  '/about': typeof _homeAboutRoute
  '/athletes': typeof _homeAthletesRouteWithChildren
  '/dashboard': typeof _homeDashboardRoute
  '/planning': typeof _homePlanningRoute
  '/programs': typeof _homeProgramsRouteWithChildren
  '/login': typeof _authLoginLazyRoute
  '/privacy': typeof _authPrivacyLazyRoute
  '/signup': typeof _authSignupLazyRoute
  '/terms': typeof _authTermsLazyRoute
  '/accept-invitation/$invitationId': typeof _authAcceptInvitationInvitationIdRoute
  '/athletes/$athleteId': typeof _homeAthletesAthleteIdRoute
  '/programs/complex': typeof _homeProgramsComplexRoute
  '/programs/exercises': typeof _homeProgramsExercisesRoute
  '/programs/workouts': typeof _homeProgramsWorkoutsRoute
  '/workouts/$workoutId': typeof _homeWorkoutsWorkoutIdRoute
  '/workouts/create': typeof _homeWorkoutsCreateRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-organization': typeof CreateOrganizationRoute
  '/download-app': typeof DownloadAppRoute
  '/join-organization': typeof JoinOrganizationRoute
  '/onboarding': typeof OnboardingRoute
  '/about': typeof _homeAboutRoute
  '/athletes': typeof _homeAthletesRouteWithChildren
  '/dashboard': typeof _homeDashboardRoute
  '/planning': typeof _homePlanningRoute
  '/programs': typeof _homeProgramsRouteWithChildren
  '/login': typeof _authLoginLazyRoute
  '/privacy': typeof _authPrivacyLazyRoute
  '/signup': typeof _authSignupLazyRoute
  '/terms': typeof _authTermsLazyRoute
  '/accept-invitation/$invitationId': typeof _authAcceptInvitationInvitationIdRoute
  '/athletes/$athleteId': typeof _homeAthletesAthleteIdRoute
  '/programs/complex': typeof _homeProgramsComplexRoute
  '/programs/exercises': typeof _homeProgramsExercisesRoute
  '/programs/workouts': typeof _homeProgramsWorkoutsRoute
  '/workouts/$workoutId': typeof _homeWorkoutsWorkoutIdRoute
  '/workouts/create': typeof _homeWorkoutsCreateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/__auth': typeof _authRouteWithChildren
  '/__home': typeof _homeRouteWithChildren
  '/create-organization': typeof CreateOrganizationRoute
  '/download-app': typeof DownloadAppRoute
  '/join-organization': typeof JoinOrganizationRoute
  '/onboarding': typeof OnboardingRoute
  '/__home/about': typeof _homeAboutRoute
  '/__home/athletes': typeof _homeAthletesRouteWithChildren
  '/__home/dashboard': typeof _homeDashboardRoute
  '/__home/planning': typeof _homePlanningRoute
  '/__home/programs': typeof _homeProgramsRouteWithChildren
  '/__auth/login': typeof _authLoginLazyRoute
  '/__auth/privacy': typeof _authPrivacyLazyRoute
  '/__auth/signup': typeof _authSignupLazyRoute
  '/__auth/terms': typeof _authTermsLazyRoute
  '/__auth/accept-invitation/$invitationId': typeof _authAcceptInvitationInvitationIdRoute
  '/__home/athletes/$athleteId': typeof _homeAthletesAthleteIdRoute
  '/__home/programs/complex': typeof _homeProgramsComplexRoute
  '/__home/programs/exercises': typeof _homeProgramsExercisesRoute
  '/__home/programs/workouts': typeof _homeProgramsWorkoutsRoute
  '/__home/workouts/$workoutId': typeof _homeWorkoutsWorkoutIdRoute
  '/__home/workouts/create': typeof _homeWorkoutsCreateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-organization'
    | '/download-app'
    | '/join-organization'
    | '/onboarding'
    | '/about'
    | '/athletes'
    | '/dashboard'
    | '/planning'
    | '/programs'
    | '/login'
    | '/privacy'
    | '/signup'
    | '/terms'
    | '/accept-invitation/$invitationId'
    | '/athletes/$athleteId'
    | '/programs/complex'
    | '/programs/exercises'
    | '/programs/workouts'
    | '/workouts/$workoutId'
    | '/workouts/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-organization'
    | '/download-app'
    | '/join-organization'
    | '/onboarding'
    | '/about'
    | '/athletes'
    | '/dashboard'
    | '/planning'
    | '/programs'
    | '/login'
    | '/privacy'
    | '/signup'
    | '/terms'
    | '/accept-invitation/$invitationId'
    | '/athletes/$athleteId'
    | '/programs/complex'
    | '/programs/exercises'
    | '/programs/workouts'
    | '/workouts/$workoutId'
    | '/workouts/create'
  id:
    | '__root__'
    | '/'
    | '/__auth'
    | '/__home'
    | '/create-organization'
    | '/download-app'
    | '/join-organization'
    | '/onboarding'
    | '/__home/about'
    | '/__home/athletes'
    | '/__home/dashboard'
    | '/__home/planning'
    | '/__home/programs'
    | '/__auth/login'
    | '/__auth/privacy'
    | '/__auth/signup'
    | '/__auth/terms'
    | '/__auth/accept-invitation/$invitationId'
    | '/__home/athletes/$athleteId'
    | '/__home/programs/complex'
    | '/__home/programs/exercises'
    | '/__home/programs/workouts'
    | '/__home/workouts/$workoutId'
    | '/__home/workouts/create'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  _authRoute: typeof _authRouteWithChildren
  _homeRoute: typeof _homeRouteWithChildren
  CreateOrganizationRoute: typeof CreateOrganizationRoute
  DownloadAppRoute: typeof DownloadAppRoute
  JoinOrganizationRoute: typeof JoinOrganizationRoute
  OnboardingRoute: typeof OnboardingRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/join-organization': {
      id: '/join-organization'
      path: '/join-organization'
      fullPath: '/join-organization'
      preLoaderRoute: typeof JoinOrganizationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/download-app': {
      id: '/download-app'
      path: '/download-app'
      fullPath: '/download-app'
      preLoaderRoute: typeof DownloadAppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create-organization': {
      id: '/create-organization'
      path: '/create-organization'
      fullPath: '/create-organization'
      preLoaderRoute: typeof CreateOrganizationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__home': {
      id: '/__home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _homeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth': {
      id: '/__auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth/terms': {
      id: '/__auth/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof _authTermsLazyRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/signup': {
      id: '/__auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof _authSignupLazyRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/privacy': {
      id: '/__auth/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof _authPrivacyLazyRouteImport
      parentRoute: typeof _authRoute
    }
    '/__auth/login': {
      id: '/__auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof _authLoginLazyRouteImport
      parentRoute: typeof _authRoute
    }
    '/__home/programs': {
      id: '/__home/programs'
      path: '/programs'
      fullPath: '/programs'
      preLoaderRoute: typeof _homeProgramsRouteImport
      parentRoute: typeof _homeRoute
    }
    '/__home/planning': {
      id: '/__home/planning'
      path: '/planning'
      fullPath: '/planning'
      preLoaderRoute: typeof _homePlanningRouteImport
      parentRoute: typeof _homeRoute
    }
    '/__home/dashboard': {
      id: '/__home/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof _homeDashboardRouteImport
      parentRoute: typeof _homeRoute
    }
    '/__home/athletes': {
      id: '/__home/athletes'
      path: '/athletes'
      fullPath: '/athletes'
      preLoaderRoute: typeof _homeAthletesRouteImport
      parentRoute: typeof _homeRoute
    }
    '/__home/about': {
      id: '/__home/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof _homeAboutRouteImport
      parentRoute: typeof _homeRoute
    }
    '/__home/workouts/create': {
      id: '/__home/workouts/create'
      path: '/workouts/create'
      fullPath: '/workouts/create'
      preLoaderRoute: typeof _homeWorkoutsCreateRouteImport
      parentRoute: typeof _homeRoute
    }
    '/__home/workouts/$workoutId': {
      id: '/__home/workouts/$workoutId'
      path: '/workouts/$workoutId'
      fullPath: '/workouts/$workoutId'
      preLoaderRoute: typeof _homeWorkoutsWorkoutIdRouteImport
      parentRoute: typeof _homeRoute
    }
    '/__home/programs/workouts': {
      id: '/__home/programs/workouts'
      path: '/workouts'
      fullPath: '/programs/workouts'
      preLoaderRoute: typeof _homeProgramsWorkoutsRouteImport
      parentRoute: typeof _homeProgramsRoute
    }
    '/__home/programs/exercises': {
      id: '/__home/programs/exercises'
      path: '/exercises'
      fullPath: '/programs/exercises'
      preLoaderRoute: typeof _homeProgramsExercisesRouteImport
      parentRoute: typeof _homeProgramsRoute
    }
    '/__home/programs/complex': {
      id: '/__home/programs/complex'
      path: '/complex'
      fullPath: '/programs/complex'
      preLoaderRoute: typeof _homeProgramsComplexRouteImport
      parentRoute: typeof _homeProgramsRoute
    }
    '/__home/athletes/$athleteId': {
      id: '/__home/athletes/$athleteId'
      path: '/$athleteId'
      fullPath: '/athletes/$athleteId'
      preLoaderRoute: typeof _homeAthletesAthleteIdRouteImport
      parentRoute: typeof _homeAthletesRoute
    }
    '/__auth/accept-invitation/$invitationId': {
      id: '/__auth/accept-invitation/$invitationId'
      path: '/accept-invitation/$invitationId'
      fullPath: '/accept-invitation/$invitationId'
      preLoaderRoute: typeof _authAcceptInvitationInvitationIdRouteImport
      parentRoute: typeof _authRoute
    }
  }
}

interface _authRouteChildren {
  _authLoginLazyRoute: typeof _authLoginLazyRoute
  _authPrivacyLazyRoute: typeof _authPrivacyLazyRoute
  _authSignupLazyRoute: typeof _authSignupLazyRoute
  _authTermsLazyRoute: typeof _authTermsLazyRoute
  _authAcceptInvitationInvitationIdRoute: typeof _authAcceptInvitationInvitationIdRoute
}

const _authRouteChildren: _authRouteChildren = {
  _authLoginLazyRoute: _authLoginLazyRoute,
  _authPrivacyLazyRoute: _authPrivacyLazyRoute,
  _authSignupLazyRoute: _authSignupLazyRoute,
  _authTermsLazyRoute: _authTermsLazyRoute,
  _authAcceptInvitationInvitationIdRoute:
    _authAcceptInvitationInvitationIdRoute,
}

const _authRouteWithChildren = _authRoute._addFileChildren(_authRouteChildren)

interface _homeAthletesRouteChildren {
  _homeAthletesAthleteIdRoute: typeof _homeAthletesAthleteIdRoute
}

const _homeAthletesRouteChildren: _homeAthletesRouteChildren = {
  _homeAthletesAthleteIdRoute: _homeAthletesAthleteIdRoute,
}

const _homeAthletesRouteWithChildren = _homeAthletesRoute._addFileChildren(
  _homeAthletesRouteChildren,
)

interface _homeProgramsRouteChildren {
  _homeProgramsComplexRoute: typeof _homeProgramsComplexRoute
  _homeProgramsExercisesRoute: typeof _homeProgramsExercisesRoute
  _homeProgramsWorkoutsRoute: typeof _homeProgramsWorkoutsRoute
}

const _homeProgramsRouteChildren: _homeProgramsRouteChildren = {
  _homeProgramsComplexRoute: _homeProgramsComplexRoute,
  _homeProgramsExercisesRoute: _homeProgramsExercisesRoute,
  _homeProgramsWorkoutsRoute: _homeProgramsWorkoutsRoute,
}

const _homeProgramsRouteWithChildren = _homeProgramsRoute._addFileChildren(
  _homeProgramsRouteChildren,
)

interface _homeRouteChildren {
  _homeAboutRoute: typeof _homeAboutRoute
  _homeAthletesRoute: typeof _homeAthletesRouteWithChildren
  _homeDashboardRoute: typeof _homeDashboardRoute
  _homePlanningRoute: typeof _homePlanningRoute
  _homeProgramsRoute: typeof _homeProgramsRouteWithChildren
  _homeWorkoutsWorkoutIdRoute: typeof _homeWorkoutsWorkoutIdRoute
  _homeWorkoutsCreateRoute: typeof _homeWorkoutsCreateRoute
}

const _homeRouteChildren: _homeRouteChildren = {
  _homeAboutRoute: _homeAboutRoute,
  _homeAthletesRoute: _homeAthletesRouteWithChildren,
  _homeDashboardRoute: _homeDashboardRoute,
  _homePlanningRoute: _homePlanningRoute,
  _homeProgramsRoute: _homeProgramsRouteWithChildren,
  _homeWorkoutsWorkoutIdRoute: _homeWorkoutsWorkoutIdRoute,
  _homeWorkoutsCreateRoute: _homeWorkoutsCreateRoute,
}

const _homeRouteWithChildren = _homeRoute._addFileChildren(_homeRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  _authRoute: _authRouteWithChildren,
  _homeRoute: _homeRouteWithChildren,
  CreateOrganizationRoute: CreateOrganizationRoute,
  DownloadAppRoute: DownloadAppRoute,
  JoinOrganizationRoute: JoinOrganizationRoute,
  OnboardingRoute: OnboardingRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
