/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PlanningImport } from './routes/planning'
import { Route as AthletesImport } from './routes/athletes'
import { Route as programsImport } from './routes/__programs'
import { Route as WorkoutsWorkoutIdImport } from './routes/workouts.$workoutId'
import { Route as programsWorkoutsImport } from './routes/__programs.workouts'
import { Route as programsExercisesImport } from './routes/__programs.exercises'
import { Route as programsComplexImport } from './routes/__programs.complex'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const PlanningRoute = PlanningImport.update({
  id: '/planning',
  path: '/planning',
  getParentRoute: () => rootRoute,
} as any)

const AthletesRoute = AthletesImport.update({
  id: '/athletes',
  path: '/athletes',
  getParentRoute: () => rootRoute,
} as any)

const programsRoute = programsImport.update({
  id: '/__programs',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const WorkoutsWorkoutIdRoute = WorkoutsWorkoutIdImport.update({
  id: '/workouts/$workoutId',
  path: '/workouts/$workoutId',
  getParentRoute: () => rootRoute,
} as any)

const programsWorkoutsRoute = programsWorkoutsImport.update({
  id: '/workouts',
  path: '/workouts',
  getParentRoute: () => programsRoute,
} as any)

const programsExercisesRoute = programsExercisesImport.update({
  id: '/exercises',
  path: '/exercises',
  getParentRoute: () => programsRoute,
} as any)

const programsComplexRoute = programsComplexImport.update({
  id: '/complex',
  path: '/complex',
  getParentRoute: () => programsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/__programs': {
      id: '/__programs'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof programsImport
      parentRoute: typeof rootRoute
    }
    '/athletes': {
      id: '/athletes'
      path: '/athletes'
      fullPath: '/athletes'
      preLoaderRoute: typeof AthletesImport
      parentRoute: typeof rootRoute
    }
    '/planning': {
      id: '/planning'
      path: '/planning'
      fullPath: '/planning'
      preLoaderRoute: typeof PlanningImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/__programs/complex': {
      id: '/__programs/complex'
      path: '/complex'
      fullPath: '/complex'
      preLoaderRoute: typeof programsComplexImport
      parentRoute: typeof programsImport
    }
    '/__programs/exercises': {
      id: '/__programs/exercises'
      path: '/exercises'
      fullPath: '/exercises'
      preLoaderRoute: typeof programsExercisesImport
      parentRoute: typeof programsImport
    }
    '/__programs/workouts': {
      id: '/__programs/workouts'
      path: '/workouts'
      fullPath: '/workouts'
      preLoaderRoute: typeof programsWorkoutsImport
      parentRoute: typeof programsImport
    }
    '/workouts/$workoutId': {
      id: '/workouts/$workoutId'
      path: '/workouts/$workoutId'
      fullPath: '/workouts/$workoutId'
      preLoaderRoute: typeof WorkoutsWorkoutIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface programsRouteChildren {
  programsComplexRoute: typeof programsComplexRoute
  programsExercisesRoute: typeof programsExercisesRoute
  programsWorkoutsRoute: typeof programsWorkoutsRoute
}

const programsRouteChildren: programsRouteChildren = {
  programsComplexRoute: programsComplexRoute,
  programsExercisesRoute: programsExercisesRoute,
  programsWorkoutsRoute: programsWorkoutsRoute,
}

const programsRouteWithChildren = programsRoute._addFileChildren(
  programsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof programsRouteWithChildren
  '/athletes': typeof AthletesRoute
  '/planning': typeof PlanningRoute
  '/about': typeof AboutLazyRoute
  '/complex': typeof programsComplexRoute
  '/exercises': typeof programsExercisesRoute
  '/workouts': typeof programsWorkoutsRoute
  '/workouts/$workoutId': typeof WorkoutsWorkoutIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof programsRouteWithChildren
  '/athletes': typeof AthletesRoute
  '/planning': typeof PlanningRoute
  '/about': typeof AboutLazyRoute
  '/complex': typeof programsComplexRoute
  '/exercises': typeof programsExercisesRoute
  '/workouts': typeof programsWorkoutsRoute
  '/workouts/$workoutId': typeof WorkoutsWorkoutIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/__programs': typeof programsRouteWithChildren
  '/athletes': typeof AthletesRoute
  '/planning': typeof PlanningRoute
  '/about': typeof AboutLazyRoute
  '/__programs/complex': typeof programsComplexRoute
  '/__programs/exercises': typeof programsExercisesRoute
  '/__programs/workouts': typeof programsWorkoutsRoute
  '/workouts/$workoutId': typeof WorkoutsWorkoutIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/athletes'
    | '/planning'
    | '/about'
    | '/complex'
    | '/exercises'
    | '/workouts'
    | '/workouts/$workoutId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/athletes'
    | '/planning'
    | '/about'
    | '/complex'
    | '/exercises'
    | '/workouts'
    | '/workouts/$workoutId'
  id:
    | '__root__'
    | '/'
    | '/__programs'
    | '/athletes'
    | '/planning'
    | '/about'
    | '/__programs/complex'
    | '/__programs/exercises'
    | '/__programs/workouts'
    | '/workouts/$workoutId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  programsRoute: typeof programsRouteWithChildren
  AthletesRoute: typeof AthletesRoute
  PlanningRoute: typeof PlanningRoute
  AboutLazyRoute: typeof AboutLazyRoute
  WorkoutsWorkoutIdRoute: typeof WorkoutsWorkoutIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  programsRoute: programsRouteWithChildren,
  AthletesRoute: AthletesRoute,
  PlanningRoute: PlanningRoute,
  AboutLazyRoute: AboutLazyRoute,
  WorkoutsWorkoutIdRoute: WorkoutsWorkoutIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/__programs",
        "/athletes",
        "/planning",
        "/about",
        "/workouts/$workoutId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/__programs": {
      "filePath": "__programs.tsx",
      "children": [
        "/__programs/complex",
        "/__programs/exercises",
        "/__programs/workouts"
      ]
    },
    "/athletes": {
      "filePath": "athletes.tsx"
    },
    "/planning": {
      "filePath": "planning.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/__programs/complex": {
      "filePath": "__programs.complex.tsx",
      "parent": "/__programs"
    },
    "/__programs/exercises": {
      "filePath": "__programs.exercises.tsx",
      "parent": "/__programs"
    },
    "/__programs/workouts": {
      "filePath": "__programs.workouts.tsx",
      "parent": "/__programs"
    },
    "/workouts/$workoutId": {
      "filePath": "workouts.$workoutId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
