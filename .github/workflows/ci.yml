name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint:
    name: Lint Codebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        run: | 
           corepack enable
           corepack prepare pnpm@latest --activate   

      - name: Install dependencies
        run: pnpm install

      - name: Run lint
        run: pnpm run lint

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        run: | 
           corepack enable
           corepack prepare pnpm@latest --activate   

      - name: Install dependencies
        run: pnpm install

      - name: Run build
        run: pnpm run build

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    services:
      test-db:
        image: postgres:15-alpine
        ports:
          - 5433:5432
        env:
          NODE_ENV: test
          POSTGRES_DB: dropit_test
          POSTGRES_USER: ${{ secrets.TEST_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        run: | 
           corepack enable
           corepack prepare pnpm@latest --activate   

      - name: Install dependencies
        run: pnpm install
     
      - name: Build dependencies
        run: pnpm run build

      - name: Run api tests in Docker
        working-directory: apps/api
        run: pnpm run test:e2e

  dev:
    name: Verify Dev Environment
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        run: | 
           corepack enable
           corepack prepare pnpm@latest --activate   

      - name: Install dependencies
        run: pnpm install

      - name: Build dependencies
        run: pnpm run build

      - name: Run dev server
        working-directory: .
        run: |
          pnpm run dev &
          sleep 10
          curl -f http://localhost:3001 || exit 1
